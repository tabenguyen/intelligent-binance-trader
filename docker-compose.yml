version: "3.8"

services:
  trading-bot:
    build: .
    container_name: coin-gemini-bot
    restart: unless-stopped

    # Environment variables
    environment:
      - TRADE_AMOUNT_USDT=10
      - RISK_REWARD_RATIO=1.5
      - MIN_USDT_BALANCE=50
      - USE_TESTNET=false
      - BINANCE_API_KEY=0o8F6DdGgaRxwg2SHKQLA4zlSVwca3xlQ2z50HcXqIWgISMRKWwrNmCfuiQnYQ6P
      - BINANCE_API_SECRET=uXzi0kBjtA2zt1s8PfTsP3FDKwcALnoR8HkwM7zbvyA6hL2bhthGjuH8uFGeQZQ9
      # - USE_TESTNET=${USE_TESTNET:-true}
      # - BINANCE_API_KEY=QCEefkfOg7oLbY7Bm886fxVrUNWaLDhT6GCS3fLRnnXk4kgEsWj9CehnPPJmPBSg
      # - BINANCE_API_SECRET=23MNoQHgg0sRBAy6Bn9AQvXtJhldZ5m2MxEG94D65hJLCZSUdKBUnh02Yv0KsaWs
    # env_file:
    #   - .env

    # Volumes for persistent data
    volumes:
      - ./trading_bot.py:/app/trading_bot.py
      - ./data:/app/data
      - ./logs:/app/logs
      - ./active_trades.txt:/app/active_trades.txt
      - ./watchlist.txt:/app/watchlist.txt:ro

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

    # Health check
    healthcheck:
      test:
        ["CMD", "python", "-c", "import trading_bot; print('Bot is healthy')"]
      interval: 5m
      timeout: 30s
      retries: 3
      start_period: 1m

  # Optional: Monitoring service
  # Uncomment if you want to add monitoring
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: watchtower
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=3600
  #   depends_on:
  #     - trading-bot

volumes:
  data:
  logs:
